{"version":3,"sources":["components/AddCategories/AddCategories.js","components/GifGrid/GifGridItem/GifGridItem.js","helpers/getGifs.js","components/GifGrid/GifGrid.js","hooks/useFetchGifs.js","GifApp.js","index.js"],"names":["AddCategories","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","categories","type","value","placeholder","onChange","target","GifGridItem","title","url","className","src","alt","getGifs","category","a","encodeURI","fetch","resp","json","data","gifs","map","img","id","images","downsized_medium","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifApp","defaultCategories","ReactDOM","render","document","getElementById"],"mappings":"+NAgDeA,EA5CO,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAKpB,EAAmCC,mBAAS,IAA5C,mBAAMC,EAAN,KAAkBC,EAAlB,KAuBA,OAEI,sBAAMC,SAbW,SAACC,GAElBA,EAAEC,iBACCJ,EAAWK,OAAOC,OAAO,IAExBR,GAAc,SAAAS,GAAU,OAAKP,GAAL,mBAAmBO,OAC3CN,EAAc,MAOlB,SAEI,uBACIO,KAAK,OACLC,MAAOT,EACPU,YAAY,sBACZC,SA5Bc,SAACR,GAIvBF,EAAcE,EAAES,OAAOH,a,QCEhBI,G,MAfK,SAAC,GAAiB,IAAhBC,EAAe,EAAfA,MAAMC,EAAS,EAATA,IAExB,OACI,sBAAKC,UAAU,kDAAf,UACI,oBAAIA,UAAU,6CAAd,SAA4DF,IAC5D,qBAAKE,UAAU,YAAf,SACI,qBAAKC,IAAKF,EAAKG,IAAKJ,W,uBCRvBK,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEbN,EAFa,0FAE2EO,UAAUF,GAFrF,sBAGAG,MAAMR,GAHN,cAGbS,EAHa,gBAIEA,EAAKC,OAJP,uBAIZC,EAJY,EAIZA,KAEDC,EAAOD,EAAKE,KAAI,SAAAC,GAAO,IAAD,EACxB,MAAO,CACHC,GAAGD,EAAIC,GACPhB,MAAMe,EAAIf,MACVC,IAAG,UAAEc,EAAIE,cAAN,aAAE,EAAYC,iBAAiBjB,QAVvB,kBAaZY,GAbY,4CAAH,sDCwCLM,G,MAjCC,SAAC,GAAgB,IAAfb,EAAc,EAAdA,SAIlB,ECR4B,SAACA,GAEzB,MAA0BrB,mBAAS,CAC/B2B,KAAK,GACLQ,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAmBA,OAdAC,qBAAU,WAENlB,EAAQC,GACHkB,MAAK,SAAAC,GAEFH,EAAS,CACLV,KAAMa,EACNL,SAAS,SAItB,CAACd,IAGGe,EDboBK,CAAapB,GAAhCW,EAAZ,EAAOL,KAAaQ,EAApB,EAAoBA,QAEhB,OAEI,qCACA,oBAAIlB,UAAU,wCAAd,SAAuDI,IAEtDc,GAAW,mBAAGlB,UAAU,mCAAb,qBAEZ,qBAAKA,UAAU,YAAf,SAGYe,EAAOH,KAAI,SAAAC,GAAG,OACV,cAAC,EAAD,eAIIA,GAHCA,EAAIC,cEKlBW,EA3BA,SAAC,GAA8B,IAAD,IAA5BC,yBAA4B,MAAR,GAAQ,EACzC,EAAkC3C,mBAAS2C,GAA3C,mBAAOnC,EAAP,KAAmBT,EAAnB,KAMA,OACI,qCACI,wCACA,cAAC,EAAD,CAAeA,cAAgBA,IAC/B,uBAEA,6BAEIS,EAAWqB,KAAI,SAAAR,GACX,OAAO,cAAC,EAAD,CAEPA,SAAUA,GADLA,Y,MCZzBuB,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.241e9f9d.chunk.js","sourcesContent":["import React, {useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nconst AddCategories = ({setCategories}) => {\r\n\r\n    //si dejamos el useState() vacio nos saldra un warning\r\n    //porque es undefined y digamos que eso a react no le gusta xD\r\n    //si queremos dejarlo vacio lo ponemos como string vacio y fiesta\r\n    const[inputValue, setInputValue] = useState(\"\");\r\n\r\n\r\n    const handleInputChange = (e) => {\r\n        //Esto me permite cambiar el valor del input, es\r\n        //porque de otra manera se quedaria estatico con \r\n        //el valor por defecto (\"Categories\")\r\n        setInputValue(e.target.value);\r\n        \r\n    }\r\n\r\n\r\n    const handleSubmit = (e) => {\r\n        //Esto evita que se recargue la pagina al darle enter\r\n        e.preventDefault();\r\n        if(inputValue.trim().length>2){\r\n\r\n            setCategories(categories => [inputValue,...categories]);\r\n            setInputValue(\"\");\r\n\r\n        }\r\n    }\r\n\r\n    return(\r\n\r\n        <form onSubmit={handleSubmit}>\r\n\r\n            <input \r\n                type=\"text\"\r\n                value={inputValue}\r\n                placeholder=\"Search all you need\"\r\n                onChange={handleInputChange}\r\n            />\r\n        </form>\r\n    )\r\n}\r\nAddCategories.propTypes={\r\n    setCategories: PropTypes.func.isRequired,\r\n}\r\nexport default AddCategories;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport \"./GifGridItem.css\";\r\nconst GifGridItem = ({title,url}) => {\r\n    \r\n    return(\r\n        <div className=\"card animate__animated animate__rotateInUpRight\">\r\n            <h3 className=\"animate__animated animate__rotateInUpRight\">{title}</h3>\r\n            <div className=\"card__img\"> \r\n                <img src={url} alt={title}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nGifGridItem.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n    url: PropTypes.string.isRequired,\r\n}\r\nexport default GifGridItem;","\r\nexport const getGifs = async (category)=>{\r\n\r\n    const url =`https://api.giphy.com/v1/gifs/search?api_key=TgaoY8qB0G5K5e05NTT2cCrDxxfQDMZj&q=${encodeURI(category)}&limit=20`;\r\n    const resp = await fetch(url);\r\n    const {data} = await resp.json();\r\n\r\n    const gifs = data.map(img =>{\r\n        return {\r\n            id:img.id,\r\n            title:img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    })\r\n    return gifs;\r\n    \r\n}","import React from 'react';\r\nimport GifGridItem from './GifGridItem/GifGridItem';\r\nimport {useFetchGifs} from '../../hooks/useFetchGifs';\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport \"./GifGrid.css\";\r\n\r\n\r\nconst GifGrid = ({category}) => {\r\n\r\n\r\n//aqui estamos cambiando el campo data a images para que se entienda mejor el codigo\r\nconst {data:images, loading} = useFetchGifs(category);\r\n\r\n    return(\r\n\r\n        <>\r\n        <h4 className=\"animate__animated animate__fadeInDown\">{category}</h4>\r\n\r\n        {loading && <p className=\"animate__animated animate__flash\">Loading</p> }\r\n        \r\n        <div className=\"card-grid\">\r\n            \r\n                {\r\n                    images.map(img =>(\r\n                        <GifGridItem \r\n                        key={img.id}\r\n                        //aqui destructuramos img para mandarle al hijo \r\n                        //data,url y title\r\n                        {...img }/>\r\n                    ))\r\n                }\r\n        </div>\r\n        </>\r\n            )\r\n}\r\n\r\nGifGrid.propTypes={\r\n    category: PropTypes.string.isRequired,\r\n}\r\n\r\nexport default GifGrid;","import { useEffect, useState } from \"react\";\r\nimport {getGifs} from \"../helpers/getGifs\";\r\n\r\n\r\nexport const useFetchGifs = (category) =>{\r\n    \r\n    const [state, setState] = useState({\r\n        data:[],\r\n        loading: true\r\n    });\r\n\r\n    useEffect(() =>{\r\n\r\n        getGifs(category)\r\n            .then(imgs => {\r\n                \r\n                setState({\r\n                    data: imgs,\r\n                    loading: false\r\n                })   \r\n            })\r\n\r\n    }, [category])\r\n\r\n    \r\n    return state;\r\n\r\n}","import React, { useState } from \"react\";\r\nimport { AddCategories, GifGrid } from './components';\r\n\r\n\r\nconst GifApp = ({defaultCategories = []}) => {\r\n    const [categories, setCategories]=useState(defaultCategories);\r\n\r\n    // const handleAdd = () => {\r\n    //     setCategories([...categories,\"HunterXHunter\"]);\r\n    // }\r\n\r\n    return(\r\n        <>\r\n            <h2>GifApp</h2>\r\n            <AddCategories setCategories={ setCategories }/>\r\n            <hr />\r\n            \r\n            <ul>\r\n                {\r\n                categories.map(category => {\r\n                    return <GifGrid \r\n                    key={category}\r\n                    category={category}\r\n                    />;        \r\n                })\r\n                }\r\n            </ul>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default GifApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport GifApp from './GifApp';\n\n\nimport './index.css';\n\n\nReactDOM.render(\n  <GifApp />,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}